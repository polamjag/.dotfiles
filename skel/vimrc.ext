"" init
if filereadable("/etc/vimrc")
  source /etc/vimrc
endif
if filereadable("/etc/vim/vimrc")
  source /etc/vim/vimrc
endif

set nocompatible
filetype off

if has('vim_starting')
  set runtimepath+=~/.vim/bundle/neobundle.vim
  call neobundle#begin(expand('~/.vim/bundle/'))
  NeoBundleFetch 'Shougo/neobundle.vim'
  call neobundle#end()
endif

set t_Co=256

"" packages
call neobundle#begin(expand('~/.vim/bundle/'))
NeoBundle 'unite.vim'

NeoBundle 'itchyny/lightline.vim'
NeoBundle 'itchyny/landscape.vim'

NeoBundle 'The-NERD-tree'
NeoBundle 'Shougo/neocomplcache'
NeoBundle 'haya14busa/incsearch.vim'
NeoBundle 'surround.vim'
NeoBundle 'thinca/vim-quickrun'
NeoBundle 'Shougo/vimproc'
NeoBundle 'Rainbow-Parenthesis'
NeoBundle 'Modeliner'
NeoBundle 'smartchr'

NeoBundle 'plasticboy/vim-markdown'
NeoBundle 'vim-ruby/vim-ruby'
NeoBundle 'ruby-matchit'
NeoBundle 'slim-template/vim-slim'
NeoBundle 'kchmck/vim-coffee-script'
call neobundle#end()

filetype plugin indent on

set wildignorecase


"" general
set expandtab
set tabstop=2
set softtabstop=0
set shiftwidth=2
set smarttab

set number
set title
set visualbell
set scrolloff=5

if v:version >= 730
  set undofile    "create <FILENAME>.un~
  set colorcolumn=85
endif

set autochdir

set ignorecase
set smartcase
set gdefault    " always %s/hoge/foo/ means %s/hoge/foo/g
set incsearch
set showmatch
set hlsearch
set wrapscan

set wrap

set mouse=a

set formatoptions=qrn1

set encoding=utf-8
set fileformats=unix,dos,mac

" Folding rules {{{
set foldenable                  " enable folding
set foldcolumn=2                " add a fold column
set foldmethod=marker           " detect triple-{ style fold markers
set foldlevelstart=0            " start out with everything folded
set foldopen=block,hor,insert,jump,mark,percent,quickfix,search,tag,undo
" }}}

set clipboard+=autoselect

set backspace=indent,eol,start
set formatoptions+=mM
set autoindent
set smartindent

set wildmenu
set wildmode=full:list

set showmatch
set foldmethod=syntax
set grepprg=internal

set autowrite
set hidden
set history=10000
set updatetime=500

syntax on

autocmd BufWritePre * :%s/\s\+$//ge " eliminate space at EOL

" colorscheme and status bar
colorscheme landscape
set cmdheight=1
let g:lightline = {
      \ 'colorscheme': 'wombat',
      \ 'mode_map': { 'c': 'NORMAL' },
      \ }
set laststatus=2


"" general keybindings
inoremap <C-c> <Esc>
noremap ; :
noremap : ;
inoremap <C-e> <END>
inoremap <C-a> <HOME>
inoremap <C-h> <Left>
inoremap <C-j> <Down>
inoremap <C-k> <Up>
inoremap <C-l> <Right>
inoremap <C-f> <Left>
inoremap <C-b> <Right>
inoremap <C-d> <Delete>
nnoremap j gj
nnoremap k gk
nnoremap <Down> gj
nnoremap <Up>   gk
nnoremap <Space> <PageDown>
nnoremap <S-SPACE> <PageUp>

map /  <Plug>(incsearch-forward)
map ?  <Plug>(incsearch-backward)
map g/ <Plug>(incsearch-stay)

imap <F7> <nop>
set pastetoggle=<F7>

imap <F4> <nop>
noremap <F4> :NERDTreeToggle<CR>
