#!/bin/sh

# thanks: https://gist.github.com/willurd/5720255

_usage() {
  echo "$0"
  echo ''
  echo '-h, --help       shows help'
  echo '-p, --port       specify port to listen'
  echo '-b, --bind       specify host to bind'
}

port=8888
bind='localhost'

while [ $# -gt 0 ] ; do
  case "$1" in
    -h|--help|--usage)
      _usage
      exit 0
      ;;
    -p|--port)
      port=$2
      shift 2
      ;;
    -b|--bind)
      bind=$2
      shift 2
      ;;
    *)
      echo 'no such option: ' $1
      exit 1
      ;;
  esac
done

echo "trying to serve on http://$bind:$port/ ..."

if hash ruby &>/dev/null ; then
  echo "exec: \`ruby -rwebrick -e \"WEBrick::HTTPServer.new(:Port => $port, :DocumentRoot => Dir.pwd, :BindAddress => '$bind').start\"\`"
  ruby -rwebrick -e "WEBrick::HTTPServer.new(:Port => $port, :DocumentRoot => Dir.pwd, :BindAddress => '$host').start"
elif hash python &>/dev/null ; then
  if [ $(python --version | sed -e "s/[A-Za-z]* *\([0-9]\).*/\1/g") = '3' ] ; then
    # python 3
    echo "exec: \`python -m http.server $port\` (expecting python3)"
    python -m http.server $port
  elif [ $(python --version | sed -e "s/[A-Za-z]* *\([0-9]\).*/\1/g") = '2' ] ; then
    # python 2
    echo "exec: \`python -m SimpleHTTPServer $port\` (expecting python2)"
    python -m SimpleHTTPServer $port
  fi
elif hash php &>/dev/null ; then
  echo "exec: \`php -S localhost:$port\`"
  php -S localhost:$port
else
  echo "there are no commands to launch HTTP server!"
  exit 1
fi

